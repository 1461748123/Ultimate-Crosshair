{"version":3,"sources":["../src/attachRefs.js"],"names":[],"mappings":";;;;;qBAEwB,UAAU;;;;qBAFY,OAAO;;;;AAEtC,SAAS,UAAU,CAAC,OAAO,EAAE,OAAO,EAAW;MAAT,GAAG,yDAAG,CAAC;MACrD,GAAG,GAAsB,OAAO,CAAhC,GAAG;MAAO,WAAW,GAAI,OAAO,CAA3B,GAAG;;AACb,MAAI,GAAG,KAAK,IAAI,EAAE;AAChB,OAAG,GAAG,GAAG,CAAA;GACV;;AAED,MAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;AACnC,UAAM,KAAK,CAAC,0EAA0E,GACtF,sFAAsF,GACtF,kGAAkG,CAAC,CAAA;GACpG;;AAED,MAAI,IAAI,CAAA;AACR,MAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACpB,QAAI,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;GACxB,MACI;AACH,QAAI,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE;AACtB,cAAQ,EAAE,IAAI,GAAG,EAAE;KACpB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;GACZ;;AAED,MAAI,CAAC,IAAI,CAAC,GAAG,EAAE;AACb,QAAI,CAAC,GAAG,GAAG,UAAC,SAAS,EAAK;AACxB,UAAI,IAAI,GAAG,mBAAM,WAAW,CAAC,SAAS,CAAC,CAAA;AACvC,UAAI,CAAC,SAAS,GAAG,SAAS,CAAA;AAC1B,UAAI,CAAC,IAAI,GAAG,IAAI,CAAA;;AAEhB,UAAI,OAAO,WAAW,KAAK,UAAU,EAAE;AACrC,mBAAW,CAAC,SAAS,CAAC,CAAA;OACvB;KACF,CAAA;GACF;;AAED,MAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAA;AAC/C,MAAI,QAAQ,YAAA,CAAA;AACZ,MAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;AACxC,YAAQ,GAAG,gBAAgB,CAAA;GAC5B,MACI,IAAI,2BAAe,gBAAgB,CAAC,EAAE;AACzC,YAAQ,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAA;GACxC,MACI;AACH,YAAQ,GAAG,gBAAS,GAAG,CAAC,gBAAgB,EAAE,UAAC,KAAK,EAAE,QAAQ,EAAK;AAC7D,aAAO,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;KACnC,CAAC,CAAA;GACH;;AAED,WAAS,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE;AACnC,QAAI,mBAAM,cAAc,CAAC,KAAK,CAAC,EAAE;AAC/B,aAAO,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;KAClD,MACI;AACH,aAAO,KAAK,CAAA;KACb;GACF;;AAED,SAAO,mBAAM,YAAY,CAAC,OAAO,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAR,QAAQ,EAAC,CAAC,CAAA;CAC9D","file":"attachRefs.js","sourcesContent":["import React, {Children, isValidElement} from 'react'\n\nexport default function attachRefs(element, itemMap, idx = 0) {\n  var {key, ref: previousRef} = element\n  if (key === null) {\n    key = idx\n  }\n\n  if (typeof previousRef === 'string') {\n    throw Error('Cannot connect GSAP Enhancer to an element with an existing string ref. ' +\n    'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n    'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute')\n  }\n\n  var item\n  if (itemMap.has(key)) {\n    item = itemMap.get(key)\n  }\n  else {\n    item = itemMap.set(key, {\n      children: new Map(),\n    }).get(key)\n  }\n\n  if (!item.ref) {\n    item.ref = (component) => {\n      var node = React.findDOMNode(component)\n      item.component = component\n      item.node = node\n\n      if (typeof previousRef === 'function') {\n        previousRef(component)\n      }\n    }\n  }\n\n  const originalChildren = element.props.children\n  let children\n  if (typeof originalChildren !== 'object') {\n    children = originalChildren\n  }\n  else if (isValidElement(originalChildren)) {\n    children = cloneChild(originalChildren)\n  }\n  else {\n    children = Children.map(originalChildren, (child, childIdx) => {\n      return cloneChild(child, childIdx)\n    })\n  }\n\n  function cloneChild(child, childIdx) {\n    if (React.isValidElement(child)) {\n      return attachRefs(child, item.children, childIdx)\n    }\n    else {\n      return child\n    }\n  }\n\n  return React.cloneElement(element, {ref: item.ref, children})\n}\n"]}