{"version":3,"sources":["../src/createTarget.js"],"names":[],"mappings":"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","file":"createTarget.js","sourcesContent":["function find(selection, selector) {\n  const result = []\n\n  selection.forEach(item => {\n    let match\n\n    recurseChildren(item, (childItem, key) => {\n      if (!match && testSelector(key, childItem, selector)) {\n        match = childItem\n      }\n    })\n\n    if (match) {\n      result.push(match)\n    }\n  })\n\n  return createTarget(result)\n}\n\nfunction findAll(selection, selector) {\n  const result = []\n\n  selection.forEach(item => recurseChildren(item, (childItem, key) => {\n    if (testSelector(key, childItem, selector)) {\n      result.push(childItem)\n    }\n  }))\n  return createTarget(result)\n}\n\nfunction findInChildren(selection, selector) {\n  const result = []\n\n  selection.forEach(item => {\n    let match\n    iterateChildren(item, (childItem, key) => {\n      if (!match && testSelector(key, childItem, selector)) {\n        match = childItem\n      }\n    })\n\n    if (match) {\n      result.push(match)\n    }\n  })\n\n  return createTarget(result)\n}\n\nfunction findAllInChildren(selection, selector) {\n  const result = []\n\n  selection.forEach(item => iterateChildren(item, (childItem, key) => {\n    if (testSelector(key, childItem, selector)) {\n      result.push(childItem)\n    }\n  }))\n  return createTarget(result)\n}\n\nfunction findWithCommands(target, commands) {\n  commands.forEach(command => {\n    if (!target[command.type]) {\n      throw Error(`[react-gsap-enhancer] unknown command type \"${target[command.type]}\"`)\n    }\n    target = target[command.type](command.selector)\n  })\n  return target\n}\n\nfunction isMounted(item) {\n  return !!item.node\n}\n\nfunction testSelector(key, childItem, selector = {}) {\n  if (typeof selector === 'string') {\n    selector = {key: selector}\n  }\n  const props = {...childItem.component.props, key}\n  return Object.keys(selector).every(selectorKey => {\n    return selector[selectorKey] === props[selectorKey]\n  })\n}\n\nfunction iterateChildren(item, callback) {\n  item.children.forEach((childItem, key) => {\n    if (isMounted(childItem)) {\n      callback(childItem, key)\n    }\n  })\n}\n\nfunction recurseChildren(item, callback) {\n  iterateChildren(item, (childItem, key) => {\n    callback(childItem, key)\n    recurseChildren(childItem, callback)\n  })\n}\n\nexport default function createTarget(selection) {\n  if (selection instanceof Map) {\n    selection = [{children: selection}]\n  }\n\n  const target = selection.map(item => item.node).filter(node => !!node)\n\n  target.find = selector => find(selection, selector)\n  target.findAll = selector => findAll(selection, selector)\n  target.findInChildren = selector => findInChildren(selection, selector)\n  target.findAllInChildren = selector => findAllInChildren(selection, selector)\n  target.findWithCommands = commands => findWithCommands(target, commands)\n\n  return target\n}\n"]}